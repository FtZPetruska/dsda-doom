name: Host builds

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: ${{ matrix.config.shell }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "MSYS2 UCRT64"
            os: windows-latest
            package_name: "mingw_x64"
            shell: "msys2 {0}"
            msystem: ucrt64
            msys-env: mingw-w64-ucrt-x86_64
            artifact-path: build/*.zip

          - name: "Linux GCC"
            os: ubuntu-22.04
            cmake_args: '-DCMAKE_INSTALL_PREFIX:PATH=/usr'
            release: true
            package_name: "linux_gcc"
            shell: bash
            artifact-path: build/*.appimage

          - name: "macOS arm64 Clang"
            os: macos-latest
            release: true
            package_name: "mac_arm64"
            shell: bash
            artifact-path: build/*.zip

          - name: "macOS x64 Clang"
            os: macos-13
            release: true
            package_name: "mac_x64"
            shell: bash
            artifact-path: build/*.zip

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: MSYS2 - Setup dependencies
        if: ${{ matrix.config.shell == 'msys2 {0}' }}
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.config.msystem }}
          install: >-
            ${{ matrix.config.msys-env }}-gcc
            ${{ matrix.config.msys-env }}-cmake
            ${{ matrix.config.msys-env }}-ninja
            ${{ matrix.config.msys-env }}-pkgconf
            ${{ matrix.config.msys-env }}-libxmp
            ${{ matrix.config.msys-env }}-fluidsynth
            ${{ matrix.config.msys-env }}-libmad
            ${{ matrix.config.msys-env }}-libvorbis
            ${{ matrix.config.msys-env }}-portmidi
            ${{ matrix.config.msys-env }}-SDL2
            ${{ matrix.config.msys-env }}-SDL2_image
            ${{ matrix.config.msys-env }}-SDL2_mixer
            ${{ matrix.config.msys-env }}-libsndfile
            ${{ matrix.config.msys-env }}-libzip

      - name: Linux - Setup dependencies
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install -y \
            gcc \
            ninja-build \
            pkg-config \
            libxmp-dev \
            libfluidsynth-dev \
            fluidsynth \
            libgl-dev \
            libglu1-mesa-dev \
            libmad0-dev \
            libportmidi-dev \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libvorbis-dev \
            libsndfile1-dev \
            libzip-dev \
            zipcmp \
            zipmerge \
            ziptool

      - name: macOS - Setup dependencies
        if: ${{ runner.os == 'macOS' }}
        run: |
          brew update
          env HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1 \
            brew install --overwrite \
              python \
              ninja \
              pkg-config \
              libxmp \
              fluid-synth \
              libvorbis \
              libzip \
              mad \
              portmidi \
              sdl2 \
              sdl2_image \
              sdl2_mixer \
              libsndfile \
              dylibbundler

      - name: CMake - Configure
        run: >-
          cmake
          -S prboom2
          -B build
          -G Ninja
          -D CMAKE_BUILD_TYPE:STRING=Release
          -D STRICT_FIND:BOOL=ON
          ${{ matrix.config.cmake_args }}

      - name: CMake - Build
        run: >-
          cmake
          --build build
          --config Release
          --verbose

      - name: CMake - Package
        working-directory: build
        if: ${{ matrix.config.package_name }}
        run: >-
          cpack
          -C Release
          --verbose

      - name: Upload built package
        if: ${{ matrix.config.package_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.package_name }}
          path: ${{ matrix.config.artifact-path }}
          if-no-files-found: error

      - name: Upload failed build artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.config.package_name }}-failure-logs"
          path: |
            build
            !${{ matrix.config.artifact-path }}

      - name: Release
        if: ${{ contains(github.ref, 'tags') && matrix.config.release }}
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.ref_name }}
          allowUpdates: true
          omitBodyDuringUpdate: true
          artifacts: ${{ matrix.config.artifact-path }}
